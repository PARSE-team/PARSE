--------------------------------------------------------------------------------------------------

TODO: SoftwareX Pre-Release

- make other menu windows

- fixes to overview plot
    - change window preview to calc only once
    - put window properties + playback settings as separate apply button
    - window overview should display LCP as well

- add export video and ascii buttons in bottom right (xyy) (use ffmpeg to export video)

- implement user-defined file support
    - add a function pathway for each data source
    - should offer to save as binary for future use
    - other error messages for user-defined
    - fix user-defined data bug

- make tabs font black

- speed max = 6

- if a file has only direct signal or noise, manually set the ylim on the overview plot

- truncate Rosetta file and label
    - check which values mkelley reads from label file, then edit them

- merge overview patch from PARSETemp

- remove label viewer in file selection window

- improve the text labels overlapping
    - only keep selected range
    - set default selected range smaller than the window
    - (later) if you have time, make it right

- use icons for play/pause

- adjust min/max for parameters
    - 0% --> (minimum sample size) (next to percent window per hop)

- improve timestamps
    - avoid astropy altogether? (check if it works correctly on installer first)
    - change "sec in file" --> to "sec in day" (GRAPH OVERVIEW)
    - change sec in file to global time
        - change widget to a datetime
        - set min and max datetimes
        - read user's datetime into astropy
        - use instead of start_sec_user
    - date in top right isn't updating correctly (change to be changed when start_sec isn't 0)
    - change overview times to have no decimals

- Documentation
    - Youtube video
    - README
        - warning about download, install, open, and processing times
        - screenshots
        - (later) resize images
    - (later) in the paper and manual, explain multithreading and workers
    - (later) explain resource bundling and ApplicationContext


--------------------------------------------------------------------------------------------------

TODO: SoftwareX Release

- Review Liz's Changes:
    - set min/max values
    - ERROR bandwidth (google doc)
    - ERROR direct signal
        - use the same location function for freq center and overview plot
    - if there is an error, update the signal analysis tab accordingly
        - just direct signal: globals work, locals show the same
        - no signal: dashes?
    - other errors?

- clean up animation function(s)

- does the program read the name of the Dawn file to find metadata, like the band name?

- if Apply Changes already uses a worker thread, then add a progress bar, but don't waste time on it!

- combine rows in file selection window (or highlight both)

- make all text interactive

- BUG: is the signal window reinitialized after back arrow, or just hidden (old settings?)

- add a menu bar, even if it's empty

- make PARSE logo higher-resolution

- try to make XYCursor label more prominent (font size, color, or "cursor value")

- make red line thicker

- fix windows icon

- BUG: double check potential mistake (near get_psd in signal_processing.py)
    - fix the argmax (np vs python)
    - check if the brackets are causing an issue

- rename functions and classes

- clean code
    - update file descriptions
    - improve comments and docstrings
    - remove print statements
    - remove tasks
    - line length

- generally compare code to example repos

- check the example GitHub's to see how to remove dependencies

- WHAT ARE AND HOW TO WRITE UNIT TESTS?
    - unit tests should throw interface errors
    - test if the PDS data is being read correctly
    - tests for if the user-defined dataset is formatted correctly

- remake environment and generate installers


--------------------------------------------------------------------------------------------------

TODO: Later

- make sure this is thread safe...
    - https://www.learnpyqt.com/courses/concurrent-execution/multithreading-pyqt-applications-qthreadpool/
    In these cases it is often better to investigate using a pure-Python thread pool
    (e.g. concurrent futures) to keep your processing and thread-event handling further isolated
    from your GUI. However, note that any Python GUI code can block other Python code unless it's
    in a separate process.
    - https://stackoverflow.com/questions/36665850/matplotlib-animation-inside-your-own-gui

- check for memory leaks

- manually implement mkelley functions

- show frames buffered

- fix window initialization: https://www.learnpyqt.com/tutorials/creating-multiple-windows/

pyrcc5 -o resources.py resources.qrc
-   Note: this command is for freezing a native PyQt5 resource file,
    though PARSE uses a different implementation (see FBS ApplicationContext)
